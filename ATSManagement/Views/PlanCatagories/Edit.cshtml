@model ATSManagement.ViewModels.AnnualPlanCatagory
@using ATSManagement.Services;
@inject LanguageService _localization
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = @_localization.Getkey("key_plans") + ":Edit";
}

<div class="page-wrapper">
    <!-- Page header -->
    <div class="page-header d-print-none">
        <div class="container-xl">
            <div class="row g-2 align-items-center">
                <div class="col">
                    <h2 class="page-title">
                        @_localization.Getkey("key_plans")
                    </h2>
                </div>
            </div>
        </div>
    </div>

    <div class="col-12">
        <div class="card">
            <div class="card-header">
            </div>
            <form asp-action="Edit" asp-controller="PlanCatagories">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input type="hidden" asp-for="PlanCatId" />
                            <input type="hidden" asp-for="InspectionPlanId" />
                            <div class="mb-3 row">
                                <label class="col-3 col-form-label">@_localization.Getkey("title")</label>
                                <div class="col">
                                    <input asp-for="CatTitle" class="form-control" />
                                    <span asp-validation-for="CatTitle" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="mb-3 row">
                                <label class="col-3 col-form-label">@_localization.Getkey("Description")</label>
                                <div class="col">
                                    <input asp-for="CatDescription" class="form-control" />
                                    <span asp-validation-for="CatDescription" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="mb-3 row">
                                <label asp-for="DoesHaveSpecificPlan" class="col-3 col-form-label">@_localization.Getkey("DoesHaveSpecificPlan")</label>
                                <div class="col">
                                    <input asp-for="DoesHaveSpecificPlan" type="checkbox" class="form-check-input m-0" />
                                    <span asp-validation-for="DoesHaveSpecificPlan" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer text-end">
                    <div class="d-flex">
                        <input type="submit" value="@_localization.Getkey("Update")" class="btn btn-primary" />
                        <a asp-action="Index" asp-controller="PlanCatagories" asp-route-InspectionPlanId="@ViewBag.InspectionPlanId">@_localization.Getkey("backlist")</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>

        document.addEventListener("DOMContentLoaded", function () {
            var el;
            window.TomSelect && (new TomSelect(el = document.getElementById('Subjects_dropdown'), {
                copyClassesToDropdown: false,
                dropdownParent: 'body',
                controlInput: '<input>',
                render: {
                    item: function (data, escape) {
                        if (data.customProperties) {
                            return '<div><span class="dropdown-item-indicator">' + data.customProperties + '</span>' + escape(data.text) + '</div>';
                        }
                        return '<div>' + escape(data.text) + '</div>';
                    },
                    option: function (data, escape) {
                        if (data.customProperties) {
                            return '<div><span class="dropdown-item-indicator">' + data.customProperties + '</span>' + escape(data.text) + '</div>';
                        }
                        return '<div>' + escape(data.text) + '</div>';
                    },
                },
            }));
        });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let options = {
                selector: '#CatDescription',
                height: 300,
                menubar: true,
                statusbar: false,
                plugins: [
                    'advlist autolink lists link image charmap print preview anchor',
                    'searchreplace visualblocks code fullscreen',
                    'insertdatetime media table paste code help wordcount',
                    'lists'
                ],
                toolbar: 'undo redo | formatselect | ' +
                    'bold italic backcolor | alignleft aligncenter ' +
                    'alignright alignjustify | bullist numlist outdent indent | ' +
                    'removeformat',
                content_style: 'body { font-family: -apple-system, BlinkMacSystemFont, San Francisco, Segoe UI, Roboto, Helvetica Neue, sans-serif; font-size: 14px; -webkit-font-smoothing: antialiased; }'
            }
            if (localStorage.getItem("tablerTheme") === 'dark') {
                options.skin = 'oxide-dark';
                options.content_css = 'dark';
            }
            tinyMCE.init(options);
        })
    </script>
}

