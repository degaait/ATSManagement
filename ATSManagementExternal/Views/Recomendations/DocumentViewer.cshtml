@using ATSManagementExternal.Services;
@inject LanguageService _localization
@inject IHttpContextAccessor _context;
@{
    string filepath = @ViewBag.path;
}
<div class="page-body">
    <div class="container-xl">
        <div class="row row-cards">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <a style="color:darkblue" asp-action="@ViewBag.action" asp-controller="@ViewBag.controller">
                            <i class="bi bi-backspace-fill"></i>
                            @_localization.Getkey("backlist")
                        </a>
                    </div>
                    <div class="card-body">
                        @try
                        {
                            if (filepath != null)
                            {
                                if (filepath.EndsWith(".pdf") || filepath.EndsWith(".PNG") || filepath.EndsWith(".JPG") || filepath.EndsWith(".png") || filepath.EndsWith(".jpg"))
                                {
                                    <div class="row">
                                        <embed src="@ViewBag.path" style="width:100%; height:100vh" />
                                    </div>
                                }
                                else if (filepath.EndsWith(".docx") || filepath.EndsWith(".doc"))
                                {
                                    <div class="row">
                                        <a asp-action="DownloadEvidenceFile" asp-route-path="@filepath" asp-route-method="@ViewBag.action" asp-route-methodController="@ViewBag.controller" style="font-size:40px">  <i class="bi bi-cloud-arrow-down-fill"></i> &nbsp;@_localization.Getkey("download")</a>
                                    </div>
                                }
                                else
                                {
                                    <div class="row">
                                        <div class="error-content">
                                            <h3><i class="fas fa-exclamation-triangle text-warning"></i> @_localization.Getkey("file_not_finde")</h3>
                                            <p>
                                                @_localization.Getkey("cannot_open_file")

                                            </p>

                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="row">
                                    <div class="error-content">
                                        <h3><i class="fas fa-exclamation-triangle text-warning"></i> @_localization.Getkey("file_not_finde")</h3>
                                        <p>
                                            @_localization.Getkey("cannot_open_file")

                                        </p>
                                    </div>
                                </div>
                            }

                        }
                        catch (Exception ex)
                        {
                            <div class="row">
                                <div class="error-content">
                                    <h3><i class="fas fa-exclamation-triangle text-warning"></i> @_localization.Getkey("file_not_finde")</h3>
                                    <p>
                                        @_localization.Getkey("cannot_open_file")
                                        because of @ex.Message
                                    </p>
                                </div>
                            </div>
                        }


                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


